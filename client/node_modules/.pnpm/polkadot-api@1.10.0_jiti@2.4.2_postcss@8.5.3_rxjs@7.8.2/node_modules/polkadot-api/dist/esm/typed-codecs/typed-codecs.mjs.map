{"version":3,"file":"typed-codecs.mjs","sources":["../../../src/typed-codecs/typed-codecs.ts"],"sourcesContent":["import { type ChainDefinition } from \"@/descriptors\"\nimport {\n  getDynamicBuilder,\n  getLookupFn,\n  MetadataLookup,\n} from \"@polkadot-api/metadata-builders\"\nimport { decAnyMetadata, V14, V15 } from \"@polkadot-api/substrate-bindings\"\nimport { TypedCodecs } from \"./types\"\n\nexport const createConstantEntry = (\n  palletName: string,\n  name: string,\n  lookup: MetadataLookup,\n  { buildConstant }: ReturnType<typeof getDynamicBuilder>,\n) => {\n  const pallet = lookup.metadata.pallets.find((p) => p.name === palletName)\n  const constant = pallet?.constants.find((c) => c.name === name)\n  if (constant == null)\n    throw new Error(`Runtime entry Constant(${palletName}.${name}) not found`)\n  return buildConstant(palletName, name)\n}\n\nconst withError =\n  <T>(\n    builder: (pallet: string, name: string) => T,\n    errName: string,\n  ): ((pallet: string, name: string) => T) =>\n  (pallet, name) => {\n    try {\n      return builder(pallet, name)\n    } catch {\n      throw new Error(`Runtime entry ${errName}(${pallet}.${name}) not found`)\n    }\n  }\n\n/**\n * It provides access the codecs of all possible on-chain interactions.\n *\n * @param descriptors  Pass descriptors from `@polkadot-api/descriptors`\n *                     generated by `papi` CLI.\n */\nexport const getTypedCodecs = async <D extends ChainDefinition>(\n  descriptors: D,\n): Promise<TypedCodecs<D>> => {\n  const metadata = decAnyMetadata(await descriptors.getMetadata()).metadata\n    .value as V14 | V15\n  const target = {}\n  const createProxy = (propCall: (prop: string) => unknown) =>\n    new Proxy(target, {\n      get(_, prop) {\n        return propCall(prop as string)\n      },\n    })\n  const createProxyPath = <T>(pathCall: (a: string, b: string) => T) => {\n    const cache: Record<string, Record<string, T>> = {}\n    return createProxy((a) => {\n      if (!cache[a]) cache[a] = {}\n      return createProxy((b) => {\n        if (!cache[a][b]) cache[a][b] = pathCall(a, b)\n        return cache[a][b]\n      })\n    }) as Record<string, Record<string, T>>\n  }\n\n  const lookup = getLookupFn(metadata)\n  const {\n    buildRuntimeCall,\n    buildStorage,\n    buildConstant,\n    buildCall,\n    buildEvent,\n  } = getDynamicBuilder(lookup)\n\n  return {\n    query: createProxyPath((...a) => {\n      const { value, args } = withError(buildStorage, \"Storage\")(...a)\n      return { value, args }\n    }),\n    tx: createProxyPath((...a) => withError(buildCall, \"Call\")(...a).codec),\n    event: createProxyPath(\n      (...args) => withError(buildEvent, \"Event\")(...args).codec,\n    ),\n    apis: createProxyPath(withError(buildRuntimeCall, \"Runtime API\")),\n    constants: createProxyPath(withError(buildConstant, \"Constant\")),\n  } as TypedCodecs<D>\n}\n"],"names":[],"mappings":";;;AAsBA,MAAM,YACJ,CACE,OAAA,EACA,OAEF,KAAA,CAAC,QAAQ,IAAS,KAAA;AAChB,EAAI,IAAA;AACF,IAAO,OAAA,OAAA,CAAQ,QAAQ,IAAI,CAAA;AAAA,GACrB,CAAA,MAAA;AACN,IAAM,MAAA,IAAI,MAAM,CAAiB,cAAA,EAAA,OAAO,IAAI,MAAM,CAAA,CAAA,EAAI,IAAI,CAAa,WAAA,CAAA,CAAA;AAAA;AAE3E,CAAA;AAQW,MAAA,cAAA,GAAiB,OAC5B,WAC4B,KAAA;AAC5B,EAAA,MAAM,WAAW,cAAe,CAAA,MAAM,YAAY,WAAY,EAAC,EAAE,QAC9D,CAAA,KAAA;AACH,EAAA,MAAM,SAAS,EAAC;AAChB,EAAA,MAAM,WAAc,GAAA,CAAC,QACnB,KAAA,IAAI,MAAM,MAAQ,EAAA;AAAA,IAChB,GAAA,CAAI,GAAG,IAAM,EAAA;AACX,MAAA,OAAO,SAAS,IAAc,CAAA;AAAA;AAChC,GACD,CAAA;AACH,EAAM,MAAA,eAAA,GAAkB,CAAI,QAA0C,KAAA;AACpE,IAAA,MAAM,QAA2C,EAAC;AAClD,IAAO,OAAA,WAAA,CAAY,CAAC,CAAM,KAAA;AACxB,MAAA,IAAI,CAAC,KAAM,CAAA,CAAC,GAAS,KAAA,CAAA,CAAC,IAAI,EAAC;AAC3B,MAAO,OAAA,WAAA,CAAY,CAAC,CAAM,KAAA;AACxB,QAAA,IAAI,CAAC,KAAA,CAAM,CAAC,CAAA,CAAE,CAAC,CAAA,EAAS,KAAA,CAAA,CAAC,CAAE,CAAA,CAAC,CAAI,GAAA,QAAA,CAAS,GAAG,CAAC,CAAA;AAC7C,QAAO,OAAA,KAAA,CAAM,CAAC,CAAA,CAAE,CAAC,CAAA;AAAA,OAClB,CAAA;AAAA,KACF,CAAA;AAAA,GACH;AAEA,EAAM,MAAA,MAAA,GAAS,YAAY,QAAQ,CAAA;AACnC,EAAM,MAAA;AAAA,IACJ,gBAAA;AAAA,IACA,YAAA;AAAA,IACA,aAAA;AAAA,IACA,SAAA;AAAA,IACA;AAAA,GACF,GAAI,kBAAkB,MAAM,CAAA;AAE5B,EAAO,OAAA;AAAA,IACL,KAAA,EAAO,eAAgB,CAAA,CAAA,GAAI,CAAM,KAAA;AAC/B,MAAM,MAAA,EAAE,OAAO,IAAK,EAAA,GAAI,UAAU,YAAc,EAAA,SAAS,CAAE,CAAA,GAAG,CAAC,CAAA;AAC/D,MAAO,OAAA,EAAE,OAAO,IAAK,EAAA;AAAA,KACtB,CAAA;AAAA,IACD,EAAA,EAAI,eAAgB,CAAA,CAAA,GAAI,CAAM,KAAA,SAAA,CAAU,SAAW,EAAA,MAAM,CAAE,CAAA,GAAG,CAAC,CAAA,CAAE,KAAK,CAAA;AAAA,IACtE,KAAO,EAAA,eAAA;AAAA,MACL,CAAA,GAAI,SAAS,SAAU,CAAA,UAAA,EAAY,OAAO,CAAE,CAAA,GAAG,IAAI,CAAE,CAAA;AAAA,KACvD;AAAA,IACA,IAAM,EAAA,eAAA,CAAgB,SAAU,CAAA,gBAAA,EAAkB,aAAa,CAAC,CAAA;AAAA,IAChE,SAAW,EAAA,eAAA,CAAgB,SAAU,CAAA,aAAA,EAAe,UAAU,CAAC;AAAA,GACjE;AACF;;;;"}