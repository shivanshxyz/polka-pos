{"version":3,"file":"new-blocks.mjs","sources":["../../../src/chainHead/new-blocks.ts"],"sourcesContent":["import { mergeMap, Observable, scan, share } from \"rxjs\"\nimport { BlockInfo } from \"./chainHead\"\nimport { PinnedBlocks } from \"./streams\"\n\nexport const getNewBlocks$ = (pinnedBlocks$: Observable<PinnedBlocks>) =>\n  pinnedBlocks$.pipe(\n    scan(\n      ({ reportedBlocks: prevReportedBlocks }, { blocks }) => {\n        const reportedBlocks = new Set<string>(blocks.keys())\n        const newBlocks: BlockInfo[] = []\n\n        if (reportedBlocks.size > prevReportedBlocks.size) {\n          blocks.forEach(({ hash, number, parent }) => {\n            if (!prevReportedBlocks.has(hash)) {\n              newBlocks.push({\n                hash,\n                number,\n                parent,\n              })\n            }\n          })\n        }\n\n        return { reportedBlocks, newBlocks }\n      },\n      {\n        reportedBlocks: new Set<string>(),\n        newBlocks: new Array<BlockInfo>(0),\n      },\n    ),\n    mergeMap(({ newBlocks }) => newBlocks),\n    share(),\n  )\n"],"names":[],"mappings":";;AAIa,MAAA,aAAA,GAAgB,CAAC,aAAA,KAC5B,aAAc,CAAA,IAAA;AAAA,EACZ,IAAA;AAAA,IACE,CAAC,EAAE,cAAA,EAAgB,oBAAsB,EAAA,EAAE,QAAa,KAAA;AACtD,MAAA,MAAM,cAAiB,GAAA,IAAI,GAAY,CAAA,MAAA,CAAO,MAAM,CAAA;AACpD,MAAA,MAAM,YAAyB,EAAC;AAEhC,MAAI,IAAA,cAAA,CAAe,IAAO,GAAA,kBAAA,CAAmB,IAAM,EAAA;AACjD,QAAA,MAAA,CAAO,QAAQ,CAAC,EAAE,IAAM,EAAA,MAAA,EAAQ,QAAa,KAAA;AAC3C,UAAA,IAAI,CAAC,kBAAA,CAAmB,GAAI,CAAA,IAAI,CAAG,EAAA;AACjC,YAAA,SAAA,CAAU,IAAK,CAAA;AAAA,cACb,IAAA;AAAA,cACA,MAAA;AAAA,cACA;AAAA,aACD,CAAA;AAAA;AACH,SACD,CAAA;AAAA;AAGH,MAAO,OAAA,EAAE,gBAAgB,SAAU,EAAA;AAAA,KACrC;AAAA,IACA;AAAA,MACE,cAAA,sBAAoB,GAAY,EAAA;AAAA,MAChC,SAAA,EAAW,IAAI,KAAA,CAAiB,CAAC;AAAA;AACnC,GACF;AAAA,EACA,QAAS,CAAA,CAAC,EAAE,SAAA,OAAgB,SAAS,CAAA;AAAA,EACrC,KAAM;AACR;;;;"}