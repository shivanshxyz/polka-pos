import "./chunk-2TUXWMP5.js";

// node_modules/.pnpm/@polkadot-api+descriptors@file+.papi+descriptors_polkadot-api@1.10.0_jiti@2.4.2_postcss@8.5.3_rxjs@7.8.2_/node_modules/@polkadot-api/descriptors/dist/ksm_metadata-IWGM6FM5.mjs
var binMeta = "";
var ksm_metadata_default = binMeta;
export {
  ksm_metadata_default as default
};
//# sourceMappingURL=ksm_metadata-IWGM6FM5-P3H6PUV3.js.map
